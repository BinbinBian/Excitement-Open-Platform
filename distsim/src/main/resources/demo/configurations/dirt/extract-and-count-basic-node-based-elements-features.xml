<?xml version="1.0"?>

<configuration>

<!--A configuration file for the program eu.excitementproject.eop.distsim.builders.mapred.ExtractAndCountBasicNodeBasedDirtElementsFeatures which extracts and counts elements and features for dirt model from a given parsed corpus, by applying the map-reduce scheme--> 
<module name="logging"> <!--Defines the log4j properties -->
	<!--the path of the log4j properties file-->
	<param name="properties-file">configurations/log4j.properties</param> 
</module>

<module name="mapred-cooccurrence-counting"> <!-- Defines the extraction process of elements and features from a given corpus, based on ma-reduce scheme-->

	<!-- the path to the input corpus-->
	<param name="in-dir">corpora/eng</param>
	
	<!-- a (temporary) output directory for the map-redus process-->
	<param name="out-dir">mapred/out/dirt</param>
	
	<!--the name of the extractor class, which implements the eu.excitementproject.eop.distsim.builders.cooccurrence.CooccurrencesExtractor interface. For more details see the extraction-class feature of the co-occurrence extraction module: https://github.com/hltfbk/Excitement-Open-Platform/wiki/_preview#module-cooccurence-extractor-->
	<param name="cooccurrence-extraction-class">eu.excitementproject.eop.distsim.builders.cooccurrence.NodeBasedWordCooccurrenceExtraction</param>
	
	<!-- the name of the eu.excitementproject.eop.distsim.builders.reader.StreamBasedSentenceReader class, which extracts sentences from a given InputStream, with their frequencies. For more details see the sentence-reader-class feature of the co-occurrence extraction module: https://github.com/hltfbk/Excitement-Open-Platform/wiki/_preview#module-cooccurence-extractor.-->
	<param name="sentence-reader-class">eu.excitementproject.eop.distsim.builders.reader.XMLNodeSentenceReader</param>
	
	<!-- the encoding of the corpus. In case this property is not defined, the default encoding is UTF-8-->
	<param name="encoding">utf-8</param>
	
	<!--the minimal number counts for the map-reduce extracted elements-->
	<param name="minCount">10</param>
	
	<!-- the name of the class that implements the eu.excitementproject.eop.distsim.builders.elementfeature.ElementFeatureExtraction interface. For more details see the extraction-class feature of the element-feature extraction module:https://github.com/hltfbk/Excitement-Open-Platform/wiki/_preview#module-element-feature-extractor.-->
	<param name="element-feature-extraction-class">eu.excitementproject.eop.distsim.builders.elementfeature.BidirectionalPredArgElementFeatureExtraction</param>
	<param name="slot">ALL</param>
	<param name="stop-words-file">stop-words-for-pred-args.txt</param>   
</module>


<module name="separate-filter-and-index-elements-features-1-x"> <!--defines the first post-processing step of organizing the extracted predicates X arguments (given by the the map-reduce output) into the traditional distsim 'elements' and 'features-x' files-->

	<!--  the path to a directory which contains the output of the map-reduce process (usually, the directory that is defined in the out-dir feature of the above mapred-cooccurrence-counting module)-->
	<param name="in-dir">mapred/out/dirt</param>
	
	<!-- the minimal number of counts for the final extracted elements -->	
	<param name="min-count">100</param>
	
	<!-- encoding: the encoding of the texts in the input directory (defined by the in-dir feature), default utf-8-->
	<param name="encoding">utf-8</param>
	
	<!-- The type of the extracted elements (an implementation of the eu.excitementproject.eop.distsim.items.Element interface)-->
	<param name="element-class">eu.excitementproject.eop.distsim.items.PredicateElement</param>
	
	<!-- The type of the extracted features (an implementation of the eu.excitementproject.eop.distsim.items.Feature interface)-->
	<param name="feature-class">eu.excitementproject.eop.distsim.items.ArgumentFeature</param>
	
	<!-- A path for the output elements file-->
	<param name="elements-file">models/dirt/elements-x</param>
	
	<!-- A path for the output features file -->
	<param name="features-file">models/dirt/features-x</param>
</module>

<module name="separate-filter-and-index-elements-features-2-x"> <!--defines the second post-processing step of organizing the extracted predicates and X arguments (given by the the map-reduce output) into the traditional distsim 'element-feature-counts-x' and 'feature-elements-x' files-->

	<!--  the path to a directory which contains the output of the map-reduce process (usually, the directory that is defined in the out-dir feature of the above mapred-cooccurrence-counting module)-->
	<param name="in-dir">mapred/out/dirt</param>
	
	<!-- encoding: the encoding of the texts in the input directory (defined by the in-dir feature), default utf-8-->
	<param name="encoding">utf-8</param>
	
	<!-- A path for the output elements file-->
	<param name="elements-file">models/dirt/elements-x</param>
	
	<!-- A path for the output features file -->
	<param name="features-file">models/dirt/features-x</param>
	
	<!-- A path to the output element-feature-counts file-->
	<param name="element-feature-counts-file">models/dirt/element-feature-counts-x</param>
	
	<!--  A path to the output feature-elements file -->
	<param name="feature-elements-file">models/dirt/feature-elements-x</param>
	
</module>

<module name="separate-filter-and-index-elements-features-1-y"> <!--defines the second post-processing step of organizing the extracted predicates and Y arguments (given by the the map-reduce output) into the traditional distsim 'element-feature-counts-y' and 'feature-elements-y' files-->

	<!--  the path to a directory which contains the output of the map-reduce process (usually, the directory that is defined in the out-dir feature of the above mapred-cooccurrence-counting module)-->
	<param name="in-dir">mapred/out/dirt</param>
	
	<!-- the minimal number of counts for the final extracted elements -->	
	<param name="min-count">100</param>
	
	<!-- encoding: the encoding of the texts in the input directory (defined by the in-dir feature), default utf-8-->
	<param name="encoding">utf-8</param>
	
	<!-- The type of the extracted features (an implementation of the eu.excitementproject.eop.distsim.items.Feature interface)-->
	<param name="feature-class">eu.excitementproject.eop.distsim.items.ArgumentFeature</param>
	
	<!-- A path for the output features file -->
	<param name="features-file">models/dirt/features-y</param>
</module>

<module name="separate-filter-and-index-elements-features-2-y> <!--defines the second step of extracting dirt predicate and arg-y features from the map-reduce output-->

	<!--  the path to a directory which contains the output of the map-reduce process (usually, the directory that is defined in the out-dir feature of the above mapred-cooccurrence-counting module)-->
	<param name="in-dir">mapred/out/dirt</param>
	
	<!-- encoding: the encoding of the texts in the input directory (defined by the in-dir feature), default utf-8-->
	<param name="encoding">utf-8</param>
	
	<!-- A path for the output elements file-->
	<param name="elements-file">models/dirt/elements-y</param>
	
	<!-- A path for the output features file -->
	<param name="features-file">models/dirt/features-y</param>
	
	<!-- A path to the output element-feature-counts file-->
	<param name="element-feature-counts-file">models/dirt/element-feature-counts-y</param>
	
	<!--  A path to the output feature-elements file -->
	<param name="feature-elements-file">models/dirt/feature-elements-y</param>
	
</module>

</configuration>
